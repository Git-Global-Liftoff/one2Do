@model one2Do.WeatherModel.City

@{
    ViewData["Title"] = "Weather Information";
}

<div class="container">
    <div class="row">
        <div class="col-md-6 mx-auto">
            <h2 class="text-center">Search by City</h2>
            <form asp-controller="Weather" asp-action="Index" method="post">
                <div class="form-group">
                    <label asp-for="Name">Enter city name:</label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <button type="submit" class="btn btn-primary">Search</button>
            </form>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.Name))
    {
        <div class="row mt-4">
            <div class="col-md-8 mx-auto">
                <h3 class="text-center">Weather Information for @Model.Name</h3>
                <ul class="list-group">
                    <li class="list-group-item">Temperature: @Model.Temperature Â°F</li>
                    <li class="list-group-item">Humidity: @Model.Humidity %</li>
                    <li class="list-group-item">Pressure: @Model.Pressure hPa</li>
                    <li class="list-group-item">Weather: @Model.Weather</li>
                    <li class="list-group-item">Wind Speed: @Model.Wind mph</li>
                </ul>
            </div>
        </div>
    }
    else if (ViewData.ModelState.IsValid)
    {
        <div class="row mt-4">
            <div class="col-md-8 mx-auto">
                <p class="text-center">Please enter a city name to search for weather information.</p>
            </div>
        </div>
    }
    else
    {
        <div class="row mt-4">
            <div class="col-md-8 mx-auto">
                <p class="text-center text-danger">Error: @Html.ValidationMessageFor(model => model.Name)</p>
            </div>
        </div>
    }
</div>